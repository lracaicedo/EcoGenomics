source("https://bioconductor.org/biocLite.R")
biocLite("RNASeqPower")
rep2<-rnapower(depth=10, n=2, cv=0.2, effect=c(1.5, 2, 2.5, 4), alpha=.05)
plot(rep2, type='b', col="blue", xlab="Effect size (fold change)",ylab="Power",ylim=c(0,1), lty=2)
source("https://bioconductor.org/biocLite.R")
biocLite("RNASeqPower")
library(RNASeqPower)
rep2<-rnapower(depth=10, n=2, cv=0.2, effect=c(1.5, 2, 2.5, 4), alpha=.05)
plot(rep2, type='b', col="blue", xlab="Effect size (fold change)",ylab="Power",ylim=c(0,1), lty=2)
rep3<-rnapower(depth=10, n=3, cv=0.2, effect=c(1.5, 2, 2.5, 4), alpha=.05)
points(rep3, type='b', col="purple", lty=2)
rep5<-rnapower(depth=10, n=5, cv=0.2, effect=c(1.5, 2, 2.5, 4), alpha=.05)
points(rep5, type='b', col="green", lty=2)
rep10<-rnapower(depth=10, n=10, cv=0.2, effect=c(1.5, 2, 2.5, 4), alpha=.05)
points(rep10, type='b', col="red", lty=2)
rep2V<-rnapower(depth=10, n=2, cv=0.6, effect=c(1.5, 2, 2.5, 4), alpha=.05)
points(rep2V, type='b', col="blue")
rep3V<-rnapower(depth=10, n=3, cv=0.6, effect=c(1.5, 2, 2.5, 4), alpha=.05)
points(rep3V, type='b', col="purple")
rep5V<-rnapower(depth=10, n=5, cv=0.6, effect=c(1.5, 2, 2.5, 4), alpha=.05)
points(rep5V, type='b', col="green")
rep10V<-rnapower(depth=10, n=10, cv=0.6, effect=c(1.5, 2, 2.5, 4), alpha=.05)
points(rep10V, type='b', col="red")
source("https://bioconductor.org/biocLite.R")
biocLite("DESeq2")
biocLite("DESeq2")
source("https://bioconductor.org/biocLite.R")
source("https://bioconductor.org/biocLite.R")
biocLite("DESeq2")
source("http://bioconductor.org/workflows.R")
workflowInstall("rnaseqGene")
setwd("~/Dropbox/1_Research/SSW/DGE")
library("DESeq2")
library("ggplot2")
countsTable <- read.delim('countsdata_trim.txt', header=TRUE, stringsAsFactors=TRUE, row.names=1)
countData <- as.matrix(countsTable)
head(countData)
setwd("~/Documents/EcoGenomics")
library("DESeq2")
library("ggplot2")
countsTable <- read.delim('countsdata_trim.txt', header=TRUE, stringsAsFactors=TRUE, row.names=1)
countData <- as.matrix(countsTable)
head(countData)
conds <- read.delim("cols_data_trim.txt", header=TRUE, stringsAsFactors=TRUE, row.names=1)
head(conds)
colData <- as.data.frame(conds)
head(colData)
dds <- DESeqDataSetFromMatrix(countData = countData, colData = colData, design = ~ day + location + health)
dim(dds)
dds <- dds[ rowSums(counts(dds)) > 100, ]
dim(dds)
[1] 13334    65  # at > 100; little more than an average of 10 reads per sample for the 93 samples
colSums(counts(dds))
colSums(counts(dds))
hist(colSums(counts(dds)), breaks = 80, xlim=c(0,max(colSums(counts(dds)))))
colData(dds)$health <- factor(colData(dds)$health, levels=c("H","S"))
dds <- DESeq(dds)  # this step takes a loooong time ~4 minutes with the trimmed data set
save(dds, file="dds.trim.Robject")
res <- results(dds)
res <- res[order(res$padj),]
head(res)
summary(res)
plotMA(res, main="DESeq2", ylim=c(-2,2))
d <- plotCounts(dds, gene="TRINITY_DN46709_c0_g1_TRINITY_DN46709_c0_g1_i1_g.23138_m.23138", intgroup=(c("status","day","location")), returnData=TRUE)
d
p <- ggplot(d, aes(x= health, y=count, shape = date)) + theme_minimal() + theme(text = element_text(size=20), panel.grid.major = element_line(colour = "grey"))
p <- p + geom_point(position=position_jitter(w=0.3,h=0), size = 3) + scale_y_log10(breaks=c(25,100,1000)) + ylim(0,2500)
p
vsd <- varianceStabilizingTransformation(dds, blind=FALSE)
vsd <- varianceStabilizingTransformation(dds, blind=FALSE)
plotPCA(vsd, intgroup=c("health"))
plotPCA(vsd, intgroup=c("health"))
d <- plotCounts(dds, gene="TRINITY_DN46709_c0_g1_TRINITY_DN46709_c0_g1_i1_g.23138_m.23138", intgroup=(c("health","day","location")), returnData=TRUE)
d
p <- ggplot(d, aes(x= health, y=count, shape = date)) + theme_minimal() + theme(text = element_text(size=20), panel.grid.major = element_line(colour = "grey"))
p <- p + geom_point(position=position_jitter(w=0.3,h=0), size = 3) + scale_y_log10(breaks=c(25,100,1000)) + ylim(0,2500)
p
d <- plotCounts(dds, gene="TRINITY_DN46709_c0_g1_TRINITY_DN46709_c0_g1_i1_g.23138_m.23138", intgroup=(c("health","day","location")), returnData=TRUE)
d
p <- ggplot(d, aes(x= health, y=count, shape = day)) + theme_minimal() + theme(text = element_text(size=20), panel.grid.major = element_line(colour = "grey"))
p <- p + geom_point(position=position_jitter(w=0.3,h=0), size = 3) + scale_y_log10(breaks=c(25,100,1000)) + ylim(0,2500)
d <- plotCounts(dds, gene="TRINITY_DN46709_c0_g1_TRINITY_DN46709_c0_g1_i1_g.23138_m.23138", intgroup=(c("health","day","location")), returnData=TRUE)
d
p <- ggplot(d, aes(x= health, y=count, shape = day)) + theme_minimal() + theme(text = element_text(size=20), panel.grid.major = element_line(colour = "grey"))
p <- p + geom_point(position=position_jitter(w=0.3,h=0), size = 3) + scale_y_log10(breaks=c(25,100,1000)) + ylim(0,2500)
p
vsd <- varianceStabilizingTransformation(dds, blind=FALSE)
plotPCA(vsd, intgroup=c("health"))
plotPCA(vsd, intgroup=c("day"))
plotPCA(vsd, intgroup=c("location"))
plotPCA(vsd, intgroup=c("health","location"))
pdf(file="PCA_1v2_allgenes.pdf", height=5.5, width=5.5)
plotPCA(rld, intgroup=c("health","day","location"))
dev.off()
pdf(file="PCA_1v2.pdf", height=5.5, width=5.5)
data <- plotPCA(rld, intgroup=c("health","day","location"), returnData=TRUE)
percentVar <- round(100 * attr(data, "percentVar"))
ggplot(data, aes(PC1, PC2, color=sex, shape=devstage)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance"))
dev.off()
plotPCA(rld, intgroup=c("health","day","location"))
dev.off()
data <- plotPCA(rld, intgroup=c("health","day","location"), returnData=TRUE)
percentVar <- round(100 * attr(data, "percentVar"))
ggplot(data, aes(PC1, PC2, color=sex, shape=devstage)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance"))
dev.off()
source("http://bioconductor.org/workflows.R")
workflowInstall("rnaseqGene")
source("https://bioconductor.org/biocLite.R")
biocLite("DESeq2")
