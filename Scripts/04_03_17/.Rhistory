source("https://bioconductor.org/biocLite.R")
biocLite("RNASeqPower")
rep2<-rnapower(depth=10, n=2, cv=0.2, effect=c(1.5, 2, 2.5, 4), alpha=.05)
plot(rep2, type='b', col="blue", xlab="Effect size (fold change)",ylab="Power",ylim=c(0,1), lty=2)
source("https://bioconductor.org/biocLite.R")
biocLite("RNASeqPower")
library(RNASeqPower)
rep2<-rnapower(depth=10, n=2, cv=0.2, effect=c(1.5, 2, 2.5, 4), alpha=.05)
plot(rep2, type='b', col="blue", xlab="Effect size (fold change)",ylab="Power",ylim=c(0,1), lty=2)
rep3<-rnapower(depth=10, n=3, cv=0.2, effect=c(1.5, 2, 2.5, 4), alpha=.05)
points(rep3, type='b', col="purple", lty=2)
rep5<-rnapower(depth=10, n=5, cv=0.2, effect=c(1.5, 2, 2.5, 4), alpha=.05)
points(rep5, type='b', col="green", lty=2)
rep10<-rnapower(depth=10, n=10, cv=0.2, effect=c(1.5, 2, 2.5, 4), alpha=.05)
points(rep10, type='b', col="red", lty=2)
rep2V<-rnapower(depth=10, n=2, cv=0.6, effect=c(1.5, 2, 2.5, 4), alpha=.05)
points(rep2V, type='b', col="blue")
rep3V<-rnapower(depth=10, n=3, cv=0.6, effect=c(1.5, 2, 2.5, 4), alpha=.05)
points(rep3V, type='b', col="purple")
rep5V<-rnapower(depth=10, n=5, cv=0.6, effect=c(1.5, 2, 2.5, 4), alpha=.05)
points(rep5V, type='b', col="green")
rep10V<-rnapower(depth=10, n=10, cv=0.6, effect=c(1.5, 2, 2.5, 4), alpha=.05)
points(rep10V, type='b', col="red")
source("https://bioconductor.org/biocLite.R")
biocLite("DESeq2")
setwd("~/Documents/EcoGenomics/Scripts/04_03_17")
#
install.packages("devtools")
source("http://bioconductor.org/bioclite.R")
source("http://bioconductor.org/biocLite.R")
bioclite("qvalue")
biocLite("qvalue")
install_github("whitlock/OutFLANK")
install_github("whitlock/OutFLANK")
library(devtools)
library(OutFLANK)
library(vcfr)
library(adgenet)
i
install_github("whitlock/OutFLANK")
install.packages("vcfr")
library(vcfR)
library(adgenet)
library(adegenet)
ssw.geno_in <- read.fwf("SSW_all_biallelic.MAF0.02.Miss0.8.recode.vcf.geno" , width=rep(1,24))
ssw.geno <- t(ssw.geno_in)
ssw.geno[1:10,1]
dim(ssw.geno_in)
dim(ssw.geno_in)
dim(ssw.geno)
ssw_meta <- read.table("ssw_healthloc.txt", header=TRUE) # read in the data
ssw_meta <- ssw_meta[order(ssw_meta$Individual),] # reorder the meta_data by Ind number
ssw_meta$Trajectory[which(ssw_meta$Trajectory == 'MM')] = NA # selects them and sets them as MM to remove the MM's from the analysis
OF_SNPs <- MakeDiploidFSTMat(ssw.geno, locusNames = seq(1,5317,1), popNames = ssw_meta$Trajectory)
library(OutFLANK)
OF_SNPs <- MakeDiploidFSTMat(ssw.geno, locusNames = seq(1,5317,1), popNames = ssw_meta$Trajectory)
head(OF_SNPs)
dim(OF_SNPs)
OF_out <- OutFLANK(FstDataFrame = OF_SNPs, LeftTrimFraction = 0.05, RightTrimFraction = 0.05, Hmin=0.1, NumberOfSamples = 3, qthreshold = 0.1)
OutFLANKResultsPlotter(OF_out, withOutliers = T, NoCorr = T, Hmin = 0.1, binwidth = 0.005, titletext = "Scan for local selection")
outliers <- which(OF_out$results$OutlierFlag=="TRUE")
outliers
vcf1 <- read.vcfR("SSW_all_biallelic.MAF0.02.Miss0.8.recode.vcf")
dim(vcf1)
vfann <- as.data.frame(getFIX(vcf1))
vcfann[outliers]
vcfann[outliers,]
vcfann <- as.data.frame(getFIX(vcf1))
vcfann[outliers,]
