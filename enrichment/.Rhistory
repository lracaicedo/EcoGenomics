source("https://bioconductor.org/biocLite.R")
biocLite("RNASeqPower")
rep2<-rnapower(depth=10, n=2, cv=0.2, effect=c(1.5, 2, 2.5, 4), alpha=.05)
plot(rep2, type='b', col="blue", xlab="Effect size (fold change)",ylab="Power",ylim=c(0,1), lty=2)
source("https://bioconductor.org/biocLite.R")
biocLite("RNASeqPower")
library(RNASeqPower)
rep2<-rnapower(depth=10, n=2, cv=0.2, effect=c(1.5, 2, 2.5, 4), alpha=.05)
plot(rep2, type='b', col="blue", xlab="Effect size (fold change)",ylab="Power",ylim=c(0,1), lty=2)
rep3<-rnapower(depth=10, n=3, cv=0.2, effect=c(1.5, 2, 2.5, 4), alpha=.05)
points(rep3, type='b', col="purple", lty=2)
rep5<-rnapower(depth=10, n=5, cv=0.2, effect=c(1.5, 2, 2.5, 4), alpha=.05)
points(rep5, type='b', col="green", lty=2)
rep10<-rnapower(depth=10, n=10, cv=0.2, effect=c(1.5, 2, 2.5, 4), alpha=.05)
points(rep10, type='b', col="red", lty=2)
rep2V<-rnapower(depth=10, n=2, cv=0.6, effect=c(1.5, 2, 2.5, 4), alpha=.05)
points(rep2V, type='b', col="blue")
rep3V<-rnapower(depth=10, n=3, cv=0.6, effect=c(1.5, 2, 2.5, 4), alpha=.05)
points(rep3V, type='b', col="purple")
rep5V<-rnapower(depth=10, n=5, cv=0.6, effect=c(1.5, 2, 2.5, 4), alpha=.05)
points(rep5V, type='b', col="green")
rep10V<-rnapower(depth=10, n=10, cv=0.6, effect=c(1.5, 2, 2.5, 4), alpha=.05)
points(rep10V, type='b', col="red")
source("https://bioconductor.org/biocLite.R")
biocLite("DESeq2")
setwd("~/Documents/EcoGenomics/enrichment")
setwd("~/Documents/EcoGenomics/enrichment")
input="res_indiv_health_neglogpval.csv" # two columns of comma-separated values: gene id, continuous measure of significance. To perform standard GO enrichment analysis based on Fisher's exact test, use binary measure (0 or 1, i.e., either sgnificant or not).
goAnnotations="annotation_table.tab" # two-column, tab-delimited, one line per gene, multiple GO terms separated by semicolon. If you have multiple lines per gene, use nrify_GOtable.pl prior to running this script.
goDatabase="go.obo" # download from http://www.geneontology.org/GO.downloads.ontology.shtml
goDivision="BP" # either MF, or BP, or CC
source("gomwu.functions.R")
gomwuStats(input, goDatabase, goAnnotations, goDivision,
perlPath="perl", # replace with full path to perl executable if it is not in your system's PATH already
largest=0.1,  # a GO category will not be considered if it contains more than this fraction of the total number of genes
smallest=5,   # a GO category should contain at least this many genes to be considered
clusterCutHeight=0.25, # threshold for merging similar (gene-sharing) terms.
#	Alternative="g" # by default the MWU test is two-tailed; specify "g" or "l" of you want to test for "greater" or "less" instead
)
gomwuStats(input, goDatabase, goAnnotations, goDivision,
perlPath="perl", # replace with full path to perl executable if it is not in your system's PATH already
largest=0.1,  # a GO category will not be considered if it contains more than this fraction of the total number of genes
smallest=5,   # a GO category should contain at least this many genes to be considered
clusterCutHeight=0.25) # threshold for merging similar (gene-sharing) terms.
input="res_indiv_health_neglogpval.csv" # two columns of comma-separated values: gene id, continuous measure of significance. To perform standard GO enrichment analysis based on Fisher's exact test, use binary measure (0 or 1, i.e., either sgnificant or not).
goAnnotations="annotation_table.tab" # two-column, tab-delimited, one line per gene, multiple GO terms separated by semicolon. If you have multiple lines per gene, use nrify_GOtable.pl prior to running this script.
goDatabase="go.obo" # download from http://www.geneontology.org/GO.downloads.ontology.shtml
goDivision="BP" # either MF, or BP, or CC
source("gomwu.functions.R")
gomwuStats(input, goDatabase, goAnnotations, goDivision,
perlPath="perl", # replace with full path to perl executable if it is not in your system's PATH already
largest=0.1,  # a GO category will not be considered if it contains more than this fraction of the total number of genes
smallest=5,   # a GO category should contain at least this many genes to be considered
clusterCutHeight=0.25) # threshold for merging similar (gene-sharing) terms.
gomwuStats(input, goDatabase, goAnnotations, goDivision,
perlPath="perl", # replace with full path to perl executable if it is not in your system's PATH already
largest=0.1,  # a GO category will not be considered if it contains more than this fraction of the total number of genes
smallest=5,   # a GO category should contain at least this many genes to be considered
clusterCutHeight=0.25) # threshold for merging similar (gene-sharing) terms.
gomwuStats(input, goDatabase, goAnnotations, goDivision,
perlPath="perl", # replace with full path to perl executable if it is not in your system's PATH already
largest=0.1,  # a GO category will not be considered if it contains more than this fraction of the total number of genes
smallest=5,   # a GO category should contain at least this many genes to be considered
clusterCutHeight=0.25) # threshold for merging similar (gene-sharing) terms.
library(ape)
quartz()
